#/bin/bash
## Arguments: numerOfTests program arg1Init-arg1Final arg2Init-arg2Final arg3Init-arg3Final...
## Ex: ./scalaBee 10 ./examples/omp_pi 4 1000000;10000000;10000000

## Setting up
export LC_NUMERIC="en_US.UTF-8"

## Showing initial message
printf "=================\nStarting ScalaBee\n=================\n\n"

## Getting Parameters
numberOfTests=$1
program=$2
param1=$3
param2=$4
problemSize=($(echo $param2 | tr "," " "))
printf "Program:\t\t$program\n"
printf "Number of Tests:\t$numberOfTests\n"
printf "Number of threads:\t$param1\n"
printf "Problem Size:\t\t"
for i in $problemSize
do
    printf "$i "
done




## Running program and measuring time
printf "\n \nStarting tests...\n"
numberOfProblemSizes=${#problemSize[@]}
declare -a averageRuntime
for (( i=0; i<$numberOfProblemSizes; i++ ));
do
	start=$(($(date +%s%N)))
	for (( j=1; j<=$numberOfTests; j++ ))
	do
		$program $param1 $((problemSize[i]))
	done
	end=$(($(date +%s%N)))

	runtime=$((end-start)) 
	printf "The total elapsed time is %.3fs\n" $(bc -q <<< scale=3\;$runtime/1000000000)
	averageRuntime[i]=$(bc -q <<< scale=3\;$runtime/1000000000/$numberOfTests)
	printf "Average elapsed time is %.3fs\n" ${averageRuntime[i]}
	printf "\n\n"
done

## Print Tables
divider================================
divider=$divider$divider
header=" %-12s %1s %10s %11s\n"
format=" %-12s %01s %11.3f %11.3f\n"
width=50
printf "%$width.${width}s\n" "$divider"
printf " %-12s %1s %21s\n" "" "|" "Threads"
printf "$header" "" "|" "2" "4"
printf "%$width.${width}s\n" "$divider"
printf "$header" "PROBLEM SIZE" "|" "" ""

printf "%$width.${width}s\n" "$divider"



for (( i=0; i<$numberOfProblemSizes; i++ ));
do
    printf "$format" "$((problemSize[i]))" "|"  "${averageRuntime[i]}" 20
done

printf "\n \nStarting tests...\n"